---
- name: Install Podman and essentials on Ubuntu
  hosts: all
  become: true

  vars:
    use_kubic_repo: false # set to true if you want newer Podman from Kubic

  tasks:
    - name: Ensure required base packages
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - software-properties-common
        state: present
        update_cache: true

    - name: Optionally add Kubic repo (newer Podman) - key
      when: use_kubic_repo
      ansible.builtin.get_url:
        url: "https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_{{ ansible_distribution_version }}/Release.key"
        dest: /etc/apt/keyrings/kubic.asc
        mode: "0644"

    - name: Optionally add Kubic repo (newer Podman) - sources.list
      when: use_kubic_repo
      copy:
        dest: /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list
        mode: "0644"
        content: |
          deb [signed-by=/etc/apt/keyrings/kubic.asc] https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_{{ ansible_distribution_version }}/ /

    - name: Update apt cache
      apt:
        update_cache: true

    - name: Install Podman and supporting tools
      apt:
        name:
          - podman
          - uidmap
          - slirp4netns
          - fuse-overlayfs
          - podman-docker
          - crun
          - podman-tui
        state: present

    - name: Set crun as default OCI runtime (if available)
      lineinfile:
        path: /etc/containers/containers.conf
        regexp: '^#?\s*runtime\s*=\s*".*"'
        line: 'runtime = "crun"'
        create: yes
        mode: "0644"
        backup: no

    - name: Verify podman is installed
      command: podman --version
      register: podman_version
      changed_when: false

    - name: Show podman version
      debug:
        var: podman_version.stdout

    - name: Ensure rootless prereqs are detected
      command: podman info --format '{{.Host.ContainerStore}}'
      register: podman_info
      changed_when: false
      environment:
        XDG_RUNTIME_DIR: "/run/user/{{ ansible_user_uid | default(1000) }}"
      ignore_errors: true

    - name: Optional - set sensible log size limit (avoid runaway logs)
      blockinfile:
        path: /etc/containers/containers.conf
        create: yes
        mode: "0644"
        block: |
          [engine]
          log_driver = "journald"
          # or "k8s-file" with rotation via log_driver_opts
          # Example rotation (only for "k8s-file"):
          # log_driver_opts = ["max_size=10m","max_backups=5"]
