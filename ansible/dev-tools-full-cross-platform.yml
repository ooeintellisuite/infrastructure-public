---
- name: Install Development Tools (Cross-Platform)
  hosts: localhost
  connection: local
  gather_facts: yes

  vars:
    # Platform-specific variables
    is_ubuntu: "{{ ansible_os_family == 'Debian' }}"
    is_windows: "{{ ansible_os_family == 'Windows' }}"
    dev_user: '{{ ansible_user_id if is_ubuntu else ansible_user }}'
    tools_dir: "{{ ansible_user_dir if is_windows else '/home/' + dev_user }}/dev-tools"

  tasks:
    - name: Display installation start message
      debug:
        msg: 'Starting installation of development tools for {{ ansible_distribution }} {{ ansible_distribution_version }}...'

    # Ubuntu-specific tasks
    - block:
        - name: Update apt cache
          apt:
            update_cache: yes
            cache_valid_time: 3600
          become: yes

        - name: Install common prerequisites
          apt:
            name:
              - apt-transport-https
              - ca-certificates
              - curl
              - gnupg
              - lsb-release
              - software-properties-common
              - wget
              - unzip
              - build-essential
            state: present
          become: yes

        # Git Installation (Ubuntu)
        - name: Install Git (Ubuntu)
          apt:
            name: git
            state: present
          become: yes

        # Node.js Installation (Ubuntu)
        - name: Add Node.js GPG key (Ubuntu)
          shell: |
            curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg
            chmod a+r /etc/apt/keyrings/nodesource.gpg
          args:
            creates: /etc/apt/keyrings/nodesource.gpg
          become: yes

        - name: Add Node.js repository (Ubuntu)
          shell: |
            echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_20.x $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/nodesource.list
          args:
            creates: /etc/apt/sources.list.d/nodesource.list
          become: yes

        - name: Update apt cache after adding Node.js repo (Ubuntu)
          apt:
            update_cache: yes
          become: yes

        - name: Install Node.js (Ubuntu)
          apt:
            name: nodejs
            state: present
          become: yes

        # Python Installation (Ubuntu)
        - name: Install Python 3 and related packages (Ubuntu)
          apt:
            name:
              - python3
              - python3-pip
              - python3-venv
              - python3-dev
              - python-is-python3
            state: present
          become: yes

        - name: Upgrade pip to latest version (Ubuntu)
          pip:
            name: pip
            state: latest
            executable: pip3
          become: yes

        # DBeaver Installation (Ubuntu)
        - name: Create tools directory (Ubuntu)
          file:
            path: '{{ tools_dir }}'
            state: directory
            owner: '{{ dev_user }}'
            group: '{{ dev_user }}'
            mode: '0755'
          become: yes

        - name: Download DBeaver (Ubuntu)
          get_url:
            url: https://dbeaver.io/files/dbeaver-ce_latest_amd64.deb
            dest: '{{ tools_dir }}/dbeaver-ce_latest_amd64.deb'
            owner: '{{ dev_user }}'
            group: '{{ dev_user }}'
            mode: '0644'

        - name: Install DBeaver (Ubuntu)
          apt:
            deb: '{{ tools_dir }}/dbeaver-ce_latest_amd64.deb'
            state: present
          become: yes

        # Google Chrome Installation (Ubuntu)
        - name: Add Google Chrome GPG key (Ubuntu)
          shell: |
            curl -fsSL https://dl.google.com/linux/linux_signing_key.pub | gpg --dearmor -o /etc/apt/keyrings/google-chrome.gpg
            chmod a+r /etc/apt/keyrings/google-chrome.gpg
          args:
            creates: /etc/apt/keyrings/google-chrome.gpg
          become: yes

        - name: Add Google Chrome repository (Ubuntu)
          shell: |
            echo "deb [signed-by=/etc/apt/keyrings/google-chrome.gpg] http://dl.google.com/linux/chrome/deb/ stable main" | tee /etc/apt/sources.list.d/google-chrome.list
          args:
            creates: /etc/apt/sources.list.d/google-chrome.list
          become: yes

        - name: Update apt cache after adding Chrome repo (Ubuntu)
          apt:
            update_cache: yes
          become: yes

        - name: Install Google Chrome (Ubuntu)
          apt:
            name: google-chrome-stable
            state: present
          become: yes

        # Postman Installation (Ubuntu)
        - name: Download Postman (Ubuntu)
          get_url:
            url: https://dl.pstmn.io/download/latest/linux64
            dest: '{{ tools_dir }}/postman-linux-x64.tar.gz'
            owner: '{{ dev_user }}'
            group: '{{ dev_user }}'
            mode: '0644'

        - name: Create Postman directory (Ubuntu)
          file:
            path: /opt/Postman
            state: directory
            mode: '0755'
          become: yes

        - name: Extract Postman (Ubuntu)
          unarchive:
            src: '{{ tools_dir }}/postman-linux-x64.tar.gz'
            dest: /opt/Postman
            remote_src: yes
            extra_opts: [--strip-components=1]
          become: yes

        - name: Create Postman symlink (Ubuntu)
          file:
            src: /opt/Postman/Postman
            dest: /usr/local/bin/postman
            state: link
          become: yes

        - name: Create Postman desktop entry (Ubuntu)
          copy:
            content: |
              [Desktop Entry]
              Name=Postman
              Exec=/opt/Postman/Postman
              Icon=/opt/Postman/resources/app/assets/icon.png
              Terminal=false
              Type=Application
              Categories=Development;
            dest: /usr/share/applications/postman.desktop
            mode: '0644'
          become: yes

        # Visual Studio Code Installation (Ubuntu)
        - name: Add Microsoft GPG key (Ubuntu)
          shell: |
            curl -fsSL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor -o /etc/apt/keyrings/microsoft.gpg
            chmod a+r /etc/apt/keyrings/microsoft.gpg
          args:
            creates: /etc/apt/keyrings/microsoft.gpg
          become: yes

        - name: Add VS Code repository (Ubuntu)
          shell: |
            echo "deb [signed-by=/etc/apt/keyrings/microsoft.gpg] https://packages.microsoft.com/repos/code stable main" | tee /etc/apt/sources.list.d/vscode.list
          args:
            creates: /etc/apt/sources.list.d/vscode.list
          become: yes

        - name: Update apt cache after adding VS Code repo (Ubuntu)
          apt:
            update_cache: yes
          become: yes

        - name: Install Visual Studio Code (Ubuntu)
          apt:
            name: code
            state: present
          become: yes

        # Azure Data Studio Installation (Ubuntu)
        - name: Download Azure Data Studio (Ubuntu)
          get_url:
            url: https://go.microsoft.com/fwlink/?linkid=2145499
            dest: '{{ tools_dir }}/azure-data-studio-linux.deb'
            owner: '{{ dev_user }}'
            group: '{{ dev_user }}'
            mode: '0644'

        - name: Install Azure Data Studio (Ubuntu)
          apt:
            deb: '{{ tools_dir }}/azure-data-studio-linux.deb'
            state: present
          become: yes

      when: is_ubuntu

    # Windows-specific tasks
    - block:
        - name: Check for Administrator privileges (Windows)
          win_shell: |
            $currentUser = [Security.Principal.WindowsIdentity]::GetCurrent()
            $principal = New-Object Security.Principal.WindowsPrincipal($currentUser)
            if (-not $principal.IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)) {
              Write-Error "This script must be run with Administrator privileges."
              exit 1
            }
          when: is_windows

        - name: Install Chocolatey (Windows)
          win_shell: |
            $chocoInstalled = Get-Command choco -ErrorAction SilentlyContinue
            if ($chocoInstalled) {
              Write-Host "Chocolatey is already installed."
            } else {
              Set-ExecutionPolicy Bypass -Scope Process -Force
              [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
              Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
            }
          when: is_windows

        - name: Install Git (Windows)
          win_chocolatey:
            name: git
            state: present
          when: is_windows

        - name: Install Node.js (Windows)
          win_chocolatey:
            name: nodejs
            state: present
          when: is_windows

        - name: Install Python (Windows)
          win_chocolatey:
            name: python
            state: present
          when: is_windows

        - name: Install DBeaver (Windows)
          win_chocolatey:
            name: dbeaver
            state: present
          when: is_windows

        - name: Install SQL Server Management Studio (Windows)
          win_chocolatey:
            name: sql-server-management-studio
            state: present
          when: is_windows

        - name: Install Google Chrome (Windows)
          win_chocolatey:
            name: googlechrome
            state: present
          when: is_windows

        - name: Install Postman (Windows)
          win_chocolatey:
            name: postman
            state: present
          when: is_windows

        - name: Install Visual Studio Code (Windows)
          win_chocolatey:
            name: vscode
            state: present
          when: is_windows

        - name: Install Azure Data Studio (Windows)
          win_chocolatey:
            name: azure-data-studio
            state: present
          when: is_windows

      when: is_windows

    # Common tasks for both platforms
    - name: Display platform-specific information
      debug:
        msg: |
          Installation completed for {{ ansible_distribution }} {{ ansible_distribution_version }}

          {% if is_ubuntu %}
          Ubuntu-specific notes:
          - SSMS is not available on Ubuntu (replaced with Azure Data Studio)
          {% elif is_windows %}
          Windows-specific notes:
          - All tools installed via Chocolatey
          - SSMS is available on Windows
          {% endif %}

    - name: Create summary of installed tools
      copy:
        content: |
          Development Tools Installation Summary
          ======================================
          Platform: {{ ansible_distribution }} {{ ansible_distribution_version }}
          Installed on: {{ ansible_date_time.iso8601 }}

          Installed Tools:
          - Git
          - Node.js
          - Python
          - DBeaver (Database Tool)
          - Google Chrome
          {% if is_ubuntu %}
          - Postman
          - Visual Studio Code
          - Azure Data Studio (SQL Management)

          Note: SSMS is Windows-only and not installed on Ubuntu
          {% elif is_windows %}
          - Postman
          - Visual Studio Code
          - SQL Server Management Studio (SSMS)
          - Azure Data Studio (SQL Management)
          {% endif %}

          Note: Some tools may require a system restart or logout/login to work properly.
        dest: '{{ tools_dir }}/dev-tools-installation-summary.txt'
        mode: '0644'
